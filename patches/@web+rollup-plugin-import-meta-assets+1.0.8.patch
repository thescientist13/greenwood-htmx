diff --git a/node_modules/@web/rollup-plugin-import-meta-assets/src/rollup-plugin-import-meta-assets.js b/node_modules/@web/rollup-plugin-import-meta-assets/src/rollup-plugin-import-meta-assets.js
index 1d0280c..5b623e1 100644
--- a/node_modules/@web/rollup-plugin-import-meta-assets/src/rollup-plugin-import-meta-assets.js
+++ b/node_modules/@web/rollup-plugin-import-meta-assets/src/rollup-plugin-import-meta-assets.js
@@ -58,10 +58,13 @@ function importMetaAssets({ include, exclude, warnOnError, transform } = {}) {
     name: 'rollup-plugin-import-meta-assets',
 
     async transform(code, id) {
+      console.log({ id });
       if (!filter(id)) {
         return null;
       }
 
+      console.log('here!?!!?!?!', { id });
+
       const ast = this.parse(code);
       const magicString = new MagicString(code);
       let modifiedCode = false;
@@ -74,6 +77,7 @@ function importMetaAssets({ include, exclude, warnOnError, transform } = {}) {
             const absoluteAssetPath = path.resolve(absoluteScriptDir, relativeAssetPath);
             const assetName = path.basename(absoluteAssetPath);
 
+            console.log({ absoluteAssetPath, absoluteScriptDir, relativeAssetPath });
             try {
               const assetContents = await fs.promises.readFile(absoluteAssetPath);
               const transformedAssetContents =
@@ -83,11 +87,21 @@ function importMetaAssets({ include, exclude, warnOnError, transform } = {}) {
               if (transformedAssetContents === null) {
                 return;
               }
+              // https://github.com/rollup/rollup/blob/v2.79.1/docs/05-plugin-development.md#thisemitfile
+              // TODO chunk (.js) vs asset (not .js)?
               const ref = this.emitFile({
-                type: 'asset',
-                name: assetName,
-                source: transformedAssetContents,
+                type: 'chunk',
+                id: absoluteAssetPath,
+                // preserveSignature: 'strict'
+                name: assetName.replace('.js', ''),
+                // source: transformedAssetContents,
               });
+              // const ref = this.emitFile({
+              //   type: 'asset',
+              //   name: assetName,
+              //   source: transformedAssetContents,
+              // });
+              console.log({ ref });
               magicString.overwrite(
                 node.arguments[0].start,
                 node.arguments[0].end,
@@ -105,6 +119,8 @@ function importMetaAssets({ include, exclude, warnOnError, transform } = {}) {
         },
       });
 
+      console.log('(((((((((((((((((');
+
       return {
         code: magicString.toString(),
         map: modifiedCode ? magicString.generateMap({ hires: true }) : null,
